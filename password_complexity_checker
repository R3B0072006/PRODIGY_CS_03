import re

def check_password_strength(password):
    # Criteria for password strength
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    number_criteria = bool(re.search(r'\d', password))
    special_character_criteria = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))

    # Feedback and strength assessment
    strength = 0
    feedback = []

    if length_criteria:
        strength += 1
    else:
        feedback.append("Password should be at least 8 characters long.")

    if uppercase_criteria:
        strength += 1
    else:
        feedback.append("Password should include at least one uppercase letter.")

    if lowercase_criteria:
        strength += 1
    else:
        feedback.append("Password should include at least one lowercase letter.")

    if number_criteria:
        strength += 1
    else:
        feedback.append("Password should include at least one number.")

    if special_character_criteria:
        strength += 1
    else:
        feedback.append("Password should include at least one special character.")

    # Provide feedback based on strength
    if strength == 5:
        return "Strong password!", feedback
    elif 3 <= strength < 5:
        return "Moderate password. Consider improving:", feedback
    else:
        return "Weak password. Needs significant improvement:", feedback

# Example input
if __name__ == "__main__":
    user_password = input("Enter a password to check its strength: ")
    result, advice = check_password_strength(user_password)
    print(result)
    for note in advice:
        print("-", note)
